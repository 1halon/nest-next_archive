(()=>{"use strict";var e={};(()=>{var t=e;
/*!*************************************!*\
  !*** ./client/private/ts/global.ts ***!
  \*************************************/Object.defineProperty(t,"__esModule",{value:!0}),t.injectClassNames=t.debug=t.RTCConnection=t.Logger=void 0;class n{constructor(e){this.title=e.title}_options(e){("object"!=typeof e||Array.isArray(e))&&(e={})}debug(e){const{args:t,message:n,title:s}=e;console.log(`%c[${null!=s?s:this.title}]`,"color: purple;",n,...t)}}t.Logger=n;t.RTCConnection=class{constructor(e){this.connection=new RTCPeerConnection,this.logger=new n({title:"RTCConnection"}),this.ws=new WebSocket(e.server),this.ws.addEventListener("message",(async({data:e})=>{const t=await new Promise((t=>t(JSON.parse(e)))).catch((()=>e));"object"==typeof t&&Array.isArray(t)})),this.connection.addEventListener("connectionstatechange",(()=>{this.logger.debug({message:`connectionState => ${this.connection.connectionState}`})})),this.connection.addEventListener("icecandidate",(({candidate:e})=>{e&&this.logger.debug({args:[e],message:"[ICECANDIDATE]"})})),this.connection.addEventListener("iceconnectionstatechange",(()=>{this.logger.debug({message:`iceConnectionState => ${this.connection.iceConnectionState}`})})),this.connection.addEventListener("icegatheringstatechange",(()=>{this.logger.debug({message:`iceGatheringState => ${this.connection.iceGatheringState}`})})),this.connection.addEventListener("negotiationneeded",(async()=>{})),this.connection.addEventListener("signalingstatechange",(()=>{this.logger.debug({message:`signalingState => ${this.connection.signalingState}`})})),this.connection.addEventListener("track",(({streams:e,track:t})=>{this.logger.debug({args:[e],message:"[STREAMS]"}),this.logger.debug({args:[t],message:"[TRACK]"})}))}},t.debug=function(e,t,...n){console.log(`%c[${e}]`,"color: purple;",t,...n)},t.injectClassNames=function(e){if(!Array.isArray(e)&&"object"==typeof e)for(const t of Object.keys(e))for(const n of[...document.getElementsByClassName(t)])n.classList.remove(t),n.classList.add(e[t])}})()})();